{"version":3,"sources":["builder/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder, BuilderOptions } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\n\nimport { Type } from '../enum';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Utf8Builder } from './utf8';\nimport { BuilderType as B } from '../interfaces';\nimport { Builder, BuilderOptions } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n\n/** @nocollapse */\nBuilder.new = newBuilder;\n\nfunction newBuilder<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {\n\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn<T>(type)())(options) as Builder<T, TNull>;\n\n    if (type.children && type.children.length > 0) {\n\n        const children = options['children'] || [] as BuilderOptions[];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_: Field, i: number) => children[i] || defaultOptions)\n            : (({ name }: Field) => children[name] || defaultOptions);\n\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n\n    return builder as B<T, TNull>;\n}\n\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n        const BuilderCtor = getBuilderConstructor.visit(typeId);\n        BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n    });\n\n(Utf8Builder.prototype as any)._setValue = setVisitor.visitBinary;\n"]}