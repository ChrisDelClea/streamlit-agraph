{"version":3,"sources":["visitor/vectorctor.ts"],"names":[],"mappings":"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","file":"vectorctor.js","sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, VectorCtor } from '../interfaces';\n\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n\n/** @ignore */\nexport interface GetVectorConstructor extends Visitor {\n    visit<T extends Type>(node: T): VectorCtor<T>;\n    visitMany <T extends Type>(nodes: T[]): VectorCtor<T>[];\n    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => VectorCtor<T>;\n}\n\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    public visitNull                 () { return NullVector; }\n    public visitBool                 () { return BoolVector; }\n    public visitInt                  () { return IntVector; }\n    public visitInt8                 () { return Int8Vector; }\n    public visitInt16                () { return Int16Vector; }\n    public visitInt32                () { return Int32Vector; }\n    public visitInt64                () { return Int64Vector; }\n    public visitUint8                () { return Uint8Vector; }\n    public visitUint16               () { return Uint16Vector; }\n    public visitUint32               () { return Uint32Vector; }\n    public visitUint64               () { return Uint64Vector; }\n    public visitFloat                () { return FloatVector; }\n    public visitFloat16              () { return Float16Vector; }\n    public visitFloat32              () { return Float32Vector; }\n    public visitFloat64              () { return Float64Vector; }\n    public visitUtf8                 () { return Utf8Vector; }\n    public visitBinary               () { return BinaryVector; }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryVector; }\n    public visitDate                 () { return DateVector; }\n    public visitDateDay              () { return DateDayVector; }\n    public visitDateMillisecond      () { return DateMillisecondVector; }\n    public visitTimestamp            () { return TimestampVector; }\n    public visitTimestampSecond      () { return TimestampSecondVector; }\n    public visitTimestampMillisecond () { return TimestampMillisecondVector; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondVector; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondVector; }\n    public visitTime                 () { return TimeVector; }\n    public visitTimeSecond           () { return TimeSecondVector; }\n    public visitTimeMillisecond      () { return TimeMillisecondVector; }\n    public visitTimeMicrosecond      () { return TimeMicrosecondVector; }\n    public visitTimeNanosecond       () { return TimeNanosecondVector; }\n    public visitDecimal              () { return DecimalVector; }\n    public visitList                 () { return ListVector; }\n    public visitStruct               () { return StructVector; }\n    public visitUnion                () { return UnionVector; }\n    public visitDenseUnion           () { return DenseUnionVector; }\n    public visitSparseUnion          () { return SparseUnionVector; }\n    public visitDictionary           () { return DictionaryVector; }\n    public visitInterval             () { return IntervalVector; }\n    public visitIntervalDayTime      () { return IntervalDayTimeVector; }\n    public visitIntervalYearMonth    () { return IntervalYearMonthVector; }\n    public visitFixedSizeList        () { return FixedSizeListVector; }\n    public visitMap                  () { return MapVector; }\n}\n\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n"]}