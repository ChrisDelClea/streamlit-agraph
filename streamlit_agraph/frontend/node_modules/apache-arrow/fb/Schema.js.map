{"version":3,"sources":["fb/Schema.ts"],"names":[],"mappings":"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","file":"Schema.js","sourcesContent":["/* tslint:disable:class-name */\n\n// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MetadataVersion {\n        /**\n         * 0.1.0\n         */\n        V1 = 0,\n\n        /**\n         * 0.2.0\n         */\n        V2 = 1,\n\n        /**\n         * 0.3.0 -> 0.7.1\n         */\n        V3 = 2,\n\n        /**\n         * >= 0.8.0\n         */\n        V4 = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum UnionMode {\n        Sparse = 0,\n        Dense = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Precision {\n        HALF = 0,\n        SINGLE = 1,\n        DOUBLE = 2\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum DateUnit {\n        DAY = 0,\n        MILLISECOND = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum TimeUnit {\n        SECOND = 0,\n        MILLISECOND = 1,\n        MICROSECOND = 2,\n        NANOSECOND = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum IntervalUnit {\n        YEAR_MONTH = 0,\n        DAY_TIME = 1\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Type {\n        NONE = 0,\n        Null = 1,\n        Int = 2,\n        FloatingPoint = 3,\n        Binary = 4,\n        Utf8 = 5,\n        Bool = 6,\n        Decimal = 7,\n        Date = 8,\n        Time = 9,\n        Timestamp = 10,\n        Interval = 11,\n        List = 12,\n        Struct_ = 13,\n        Union = 14,\n        FixedSizeBinary = 15,\n        FixedSizeList = 16,\n        Map = 17,\n        Duration = 18,\n        LargeBinary = 19,\n        LargeUtf8 = 20,\n        LargeList = 21\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Endianness {\n        Little = 0,\n        Big = 1\n    }\n}\n\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Null {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Null\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Null= obj\n         * @returns Null\n         */\n        static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n            return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startNull(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Null.startNull(builder);\n            return Null.endNull(builder);\n        }\n    }\n}\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Struct_ {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Struct_\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Struct_ {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Struct_= obj\n         * @returns Struct_\n         */\n        static getRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n            return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startStruct_(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Struct_.startStruct_(builder);\n            return Struct_.endStruct_(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class List {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns List\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): List {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param List= obj\n         * @returns List\n         */\n        static getRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n            return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            List.startList(builder);\n            return List.endList(builder);\n        }\n    }\n}\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeList= obj\n         * @returns LargeList\n         */\n        static getRootAsLargeList(bb: flatbuffers.ByteBuffer, obj?: LargeList): LargeList {\n            return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeList.startLargeList(builder);\n            return LargeList.endLargeList(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeList= obj\n         * @returns FixedSizeList\n         */\n        static getRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n            return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of list items per value\n         *\n         * @returns number\n         */\n        listSize(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeList(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number listSize\n         */\n        static addListSize(builder: flatbuffers.Builder, listSize: number) {\n            builder.addFieldInt32(0, listSize, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeList(builder: flatbuffers.Builder, listSize: number): flatbuffers.Offset {\n            FixedSizeList.startFixedSizeList(builder);\n            FixedSizeList.addListSize(builder, listSize);\n            return FixedSizeList.endFixedSizeList(builder);\n        }\n    }\n}\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Map {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Map\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Map {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Map= obj\n         * @returns Map\n         */\n        static getRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n            return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Set to true if the keys within each value are sorted\n         *\n         * @returns boolean\n         */\n        keysSorted(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMap(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean keysSorted\n         */\n        static addKeysSorted(builder: flatbuffers.Builder, keysSorted: boolean) {\n            builder.addFieldInt8(0, +keysSorted, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMap(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createMap(builder: flatbuffers.Builder, keysSorted: boolean): flatbuffers.Offset {\n            Map.startMap(builder);\n            Map.addKeysSorted(builder, keysSorted);\n            return Map.endMap(builder);\n        }\n    }\n}\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Union {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Union\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Union {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Union= obj\n         * @returns Union\n         */\n        static getRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n            return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.UnionMode\n         */\n        mode(): org.apache.arrow.flatbuf.UnionMode {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n        }\n\n        /**\n         * @param number index\n         * @returns number\n         */\n        typeIds(index: number): number | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n        }\n\n        /**\n         * @returns number\n         */\n        typeIdsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns Int32Array\n         */\n        typeIdsArray(): Int32Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUnion(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.UnionMode mode\n         */\n        static addMode(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode) {\n            builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeIdsOffset\n         */\n        static addTypeIds(builder: flatbuffers.Builder, typeIdsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, typeIdsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createTypeIdsVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startTypeIdsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUnion(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUnion(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode, typeIdsOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Union.startUnion(builder);\n            Union.addMode(builder, mode);\n            Union.addTypeIds(builder, typeIdsOffset);\n            return Union.endUnion(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Int {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Int\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Int {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Int= obj\n         * @returns Int\n         */\n        static getRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n            return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns boolean\n         */\n        isSigned(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInt(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(0, bitWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isSigned\n         */\n        static addIsSigned(builder: flatbuffers.Builder, isSigned: boolean) {\n            builder.addFieldInt8(1, +isSigned, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInt(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInt(builder: flatbuffers.Builder, bitWidth: number, isSigned: boolean): flatbuffers.Offset {\n            Int.startInt(builder);\n            Int.addBitWidth(builder, bitWidth);\n            Int.addIsSigned(builder, isSigned);\n            return Int.endInt(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FloatingPoint {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FloatingPoint\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FloatingPoint {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FloatingPoint= obj\n         * @returns FloatingPoint\n         */\n        static getRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n            return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Precision\n         */\n        precision(): org.apache.arrow.flatbuf.Precision {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFloatingPoint(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Precision precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision) {\n            builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFloatingPoint(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFloatingPoint(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision): flatbuffers.Offset {\n            FloatingPoint.startFloatingPoint(builder);\n            FloatingPoint.addPrecision(builder, precision);\n            return FloatingPoint.endFloatingPoint(builder);\n        }\n    }\n}\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Utf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Utf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Utf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Utf8= obj\n         * @returns Utf8\n         */\n        static getRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n            return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Utf8.startUtf8(builder);\n            return Utf8.endUtf8(builder);\n        }\n    }\n}\n/**\n * Opaque binary data\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Binary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Binary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Binary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Binary= obj\n         * @returns Binary\n         */\n        static getRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n            return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Binary.startBinary(builder);\n            return Binary.endBinary(builder);\n        }\n    }\n}\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeUtf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeUtf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeUtf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeUtf8= obj\n         * @returns LargeUtf8\n         */\n        static getRootAsLargeUtf8(bb: flatbuffers.ByteBuffer, obj?: LargeUtf8): LargeUtf8 {\n            return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeUtf8.startLargeUtf8(builder);\n            return LargeUtf8.endLargeUtf8(builder);\n        }\n    }\n}\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeBinary= obj\n         * @returns LargeBinary\n         */\n        static getRootAsLargeBinary(bb: flatbuffers.ByteBuffer, obj?: LargeBinary): LargeBinary {\n            return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeBinary.startLargeBinary(builder);\n            return LargeBinary.endLargeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeBinary= obj\n         * @returns FixedSizeBinary\n         */\n        static getRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n            return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of bytes per value\n         *\n         * @returns number\n         */\n        byteWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number byteWidth\n         */\n        static addByteWidth(builder: flatbuffers.Builder, byteWidth: number) {\n            builder.addFieldInt32(0, byteWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeBinary(builder: flatbuffers.Builder, byteWidth: number): flatbuffers.Offset {\n            FixedSizeBinary.startFixedSizeBinary(builder);\n            FixedSizeBinary.addByteWidth(builder, byteWidth);\n            return FixedSizeBinary.endFixedSizeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Bool {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Bool\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Bool {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Bool= obj\n         * @returns Bool\n         */\n        static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n            return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBool(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Bool.startBool(builder);\n            return Bool.endBool(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Decimal {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Decimal\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Decimal {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Decimal= obj\n         * @returns Decimal\n         */\n        static getRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n            return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Total number of decimal digits\n         *\n         * @returns number\n         */\n        precision(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Number of digits after the decimal point \".\"\n         *\n         * @returns number\n         */\n        scale(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDecimal(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: number) {\n            builder.addFieldInt32(0, precision, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder: flatbuffers.Builder, scale: number) {\n            builder.addFieldInt32(1, scale, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDecimal(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDecimal(builder: flatbuffers.Builder, precision: number, scale: number): flatbuffers.Offset {\n            Decimal.startDecimal(builder);\n            Decimal.addPrecision(builder, precision);\n            Decimal.addScale(builder, scale);\n            return Decimal.endDecimal(builder);\n        }\n    }\n}\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Date {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Date\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Date {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Date= obj\n         * @returns Date\n         */\n        static getRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n            return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.DateUnit\n         */\n        unit(): org.apache.arrow.flatbuf.DateUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDate(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.DateUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDate(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDate(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit): flatbuffers.Offset {\n            Date.startDate(builder);\n            Date.addUnit(builder, unit);\n            return Date.endDate(builder);\n        }\n    }\n}\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Time {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Time\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Time {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Time= obj\n         * @returns Time\n         */\n        static getRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n            return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 32;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTime(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(1, bitWidth, 32);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTime(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTime(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, bitWidth: number): flatbuffers.Offset {\n            Time.startTime(builder);\n            Time.addUnit(builder, unit);\n            Time.addBitWidth(builder, bitWidth);\n            return Time.endTime(builder);\n        }\n    }\n}\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Timestamp {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Timestamp\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Timestamp {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Timestamp= obj\n         * @returns Timestamp\n         */\n        static getRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n            return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n        }\n\n        /**\n         * The time zone is a string indicating the name of a time zone, one of:\n         *\n         * * As used in the Olson time zone database (the \"tz database\" or\n         *   \"tzdata\"), such as \"America/New_York\"\n         * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n         *\n         * Whether a timezone string is present indicates different semantics about\n         * the data:\n         *\n         * * If the time zone is null or equal to an empty string, the data is \"time\n         *   zone naive\" and shall be displayed *as is* to the user, not localized\n         *   to the locale of the user. This data can be though of as UTC but\n         *   without having \"UTC\" as the time zone, it is not considered to be\n         *   localized to any time zone\n         *\n         * * If the time zone is set to a valid value, values can be displayed as\n         *   \"localized\" to that time zone, even though the underlying 64-bit\n         *   integers are identical to the same data stored in UTC. Converting\n         *   between time zones is a metadata-only operation and does not change the\n         *   underlying values\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        timezone(): string | null;\n        timezone(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        timezone(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTimestamp(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset timezoneOffset\n         */\n        static addTimezone(builder: flatbuffers.Builder, timezoneOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, timezoneOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTimestamp(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTimestamp(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, timezoneOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Timestamp.startTimestamp(builder);\n            Timestamp.addUnit(builder, unit);\n            Timestamp.addTimezone(builder, timezoneOffset);\n            return Timestamp.endTimestamp(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Interval {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Interval\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Interval {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Interval= obj\n         * @returns Interval\n         */\n        static getRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n            return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.IntervalUnit\n         */\n        unit(): org.apache.arrow.flatbuf.IntervalUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInterval(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.IntervalUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInterval(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInterval(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit): flatbuffers.Offset {\n            Interval.startInterval(builder);\n            Interval.addUnit(builder, unit);\n            return Interval.endInterval(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Duration {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Duration\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Duration {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Duration= obj\n         * @returns Duration\n         */\n        static getRootAsDuration(bb: flatbuffers.ByteBuffer, obj?: Duration): Duration {\n            return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDuration(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDuration(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDuration(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit): flatbuffers.Offset {\n            Duration.startDuration(builder);\n            Duration.addUnit(builder, unit);\n            return Duration.endDuration(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class KeyValue {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns KeyValue\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param KeyValue= obj\n         * @returns KeyValue\n         */\n        static getRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n            return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        key(): string | null;\n        key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        key(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        value(): string | null;\n        value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        value(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startKeyValue(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset keyOffset\n         */\n        static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, keyOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset valueOffset\n         */\n        static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, valueOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createKeyValue(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n            KeyValue.startKeyValue(builder);\n            KeyValue.addKey(builder, keyOffset);\n            KeyValue.addValue(builder, valueOffset);\n            return KeyValue.endKeyValue(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryEncoding {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryEncoding\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryEncoding {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryEncoding= obj\n         * @returns DictionaryEncoding\n         */\n        static getRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n            return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * The known dictionary id in the application where this data is used. In\n         * the file or streaming formats, the dictionary ids are found in the\n         * DictionaryBatch messages\n         *\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * The dictionary indices are constrained to be positive integers. If this\n         * field is null, the indices must be signed int32\n         *\n         * @param org.apache.arrow.flatbuf.Int= obj\n         * @returns org.apache.arrow.flatbuf.Int|null\n         */\n        indexType(obj?: org.apache.arrow.flatbuf.Int): org.apache.arrow.flatbuf.Int | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * By default, dictionaries are not ordered, or the order does not have\n         * semantic meaning. In some statistical, applications, dictionary-encoding\n         * is used to represent ordered categorical data, and we provide a way to\n         * preserve that metadata here\n         *\n         * @returns boolean\n         */\n        isOrdered(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryEncoding(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset indexTypeOffset\n         */\n        static addIndexType(builder: flatbuffers.Builder, indexTypeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, indexTypeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isOrdered\n         */\n        static addIsOrdered(builder: flatbuffers.Builder, isOrdered: boolean) {\n            builder.addFieldInt8(2, +isOrdered, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryEncoding(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryEncoding(builder: flatbuffers.Builder, id: flatbuffers.Long, indexTypeOffset: flatbuffers.Offset, isOrdered: boolean): flatbuffers.Offset {\n            DictionaryEncoding.startDictionaryEncoding(builder);\n            DictionaryEncoding.addId(builder, id);\n            DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n            DictionaryEncoding.addIsOrdered(builder, isOrdered);\n            return DictionaryEncoding.endDictionaryEncoding(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Field {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Field\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Field= obj\n         * @returns Field\n         */\n        static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n            return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Name is not required, in i.e. a List\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        name(): string | null;\n        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        name(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * Whether or not this field can contain nulls. Should be true in general.\n         *\n         * @returns boolean\n         */\n        nullable(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Type\n         */\n        typeType(): org.apache.arrow.flatbuf.Type {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n        }\n\n        /**\n         * This is the type of the decoded value if the field is dictionary encoded.\n         *\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        type<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * Present only if the field is dictionary encoded.\n         *\n         * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n         * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n         */\n        dictionary(obj?: org.apache.arrow.flatbuf.DictionaryEncoding): org.apache.arrow.flatbuf.DictionaryEncoding | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * children apply only to nested data types like Struct, List and Union. For\n         * primitive types children will have length 0.\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        children(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        childrenLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * User-defined metadata\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startField(builder: flatbuffers.Builder) {\n            builder.startObject(7);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nameOffset\n         */\n        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, nameOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean nullable\n         */\n        static addNullable(builder: flatbuffers.Builder, nullable: boolean) {\n            builder.addFieldInt8(1, +nullable, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Type typeType\n         */\n        static addTypeType(builder: flatbuffers.Builder, typeType: org.apache.arrow.flatbuf.Type) {\n            builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeOffset\n         */\n        static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, typeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionaryOffset\n         */\n        static addDictionary(builder: flatbuffers.Builder, dictionaryOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, dictionaryOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset childrenOffset\n         */\n        static addChildren(builder: flatbuffers.Builder, childrenOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(5, childrenOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createChildrenVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startChildrenVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(6, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createField(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, nullable: boolean, typeType: org.apache.arrow.flatbuf.Type, typeOffset: flatbuffers.Offset, dictionaryOffset: flatbuffers.Offset, childrenOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Field.startField(builder);\n            Field.addName(builder, nameOffset);\n            Field.addNullable(builder, nullable);\n            Field.addTypeType(builder, typeType);\n            Field.addType(builder, typeOffset);\n            Field.addDictionary(builder, dictionaryOffset);\n            Field.addChildren(builder, childrenOffset);\n            Field.addCustomMetadata(builder, customMetadataOffset);\n            return Field.endField(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Buffer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Buffer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Buffer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The relative offset into the shared memory page where the bytes for this\n         * buffer starts\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The absolute length (in bytes) of the memory buffer. The memory is found\n         * from offset (inclusive) to offset + length (non-inclusive).\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param flatbuffers.Long length\n         * @returns flatbuffers.Offset\n         */\n        static createBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(length);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Schema {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Schema\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Schema {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Schema= obj\n         * @returns Schema\n         */\n        static getRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n            return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * endianness of the buffer\n         * it is Little Endian by default\n         * if endianness doesn't match the underlying system then the vectors need to be converted\n         *\n         * @returns org.apache.arrow.flatbuf.Endianness\n         */\n        endianness(): org.apache.arrow.flatbuf.Endianness {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        fields(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        fieldsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startSchema(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Endianness endianness\n         */\n        static addEndianness(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness) {\n            builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset fieldsOffset\n         */\n        static addFields(builder: flatbuffers.Builder, fieldsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, fieldsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createFieldsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endSchema(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createSchema(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness, fieldsOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Schema.startSchema(builder);\n            Schema.addEndianness(builder, endianness);\n            Schema.addFields(builder, fieldsOffset);\n            Schema.addCustomMetadata(builder, customMetadataOffset);\n            return Schema.endSchema(builder);\n        }\n    }\n}\n"]}