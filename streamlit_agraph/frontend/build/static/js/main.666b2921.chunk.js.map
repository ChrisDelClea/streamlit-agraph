{"version":3,"sources":["AgraphComponent.tsx","index.tsx"],"names":["AgraphComponent","state","numClicks","render","data","JSON","parse","props","args","config","id","onClickNode","nodeId","Streamlit","setComponentValue","onDoubleClickNode","onRightClickNode","event","onClickLink","source","target","onRightClickLink","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"gPAiBMA,E,4MACGC,MAAQ,CAAEC,UAAW,G,EAErBC,OAAS,WAEd,IAAMC,EAAOC,KAAKC,MAAM,EAAKC,MAAMC,KAAX,MAClBC,EAASJ,KAAKC,MAAM,EAAKC,MAAMC,KAAX,QAyC1B,OACE,kBAAC,QAAD,CACEE,GAAG,WACHN,KAAMA,EACNK,OAAQA,EACRE,YAzCgB,SAASC,GAC3BC,IAAUC,kBAAkB,CAAC,OAAU,cAAe,KAAQF,KAyC5DG,kBAtCsB,SAASH,GACjCC,IAAUC,kBAAkB,CAAC,OAAU,oBAAqB,KAAQF,KAsClEI,iBAnCqB,SAASC,EAAYL,GAC5CC,IAAUC,kBAAkB,CAAC,OAAU,mBAAoB,KAAQF,KAmCjEM,YA1BgB,SAASC,EAAaC,GACtCP,IAAUC,kBAAkB,CAAC,OAAU,cAAe,WAAcK,EAAQ,WAAaC,KA0BzFC,iBAvBqB,SAASJ,EAAYE,EAAaC,GACzDP,IAAUC,kBAAkB,CAAC,OAAU,mBAAoB,WAAcK,EAAQ,WAAaC,Q,YAlCtEE,KAmEfC,cAAwBvB,GChFvCwB,IAASrB,OACP,kBAAC,IAAMsB,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.666b2921.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection\n} from \"streamlit-component-lib\";\nimport React, { ReactNode } from \"react\";\n\nimport { Graph } from \"react-d3-graph\";\n\ninterface State {\n  numClicks: number\n}\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass AgraphComponent extends StreamlitComponentBase<State> {\n  public state = { numClicks: 0 }\n\n  public render = (): ReactNode => {\n\n    const data = JSON.parse(this.props.args[\"data\"]);\n    const config = JSON.parse(this.props.args[\"config\"]);\n\n    const onClickGraph = function() {\n    };\n\n    const onClickNode = function(nodeId: any) {\n      Streamlit.setComponentValue({\"action\": \"onClickNode\", \"node\": nodeId});\n    };\n\n    const onDoubleClickNode = function(nodeId: any) {\n      Streamlit.setComponentValue({\"action\": \"onDoubleClickNode\", \"node\": nodeId});\n    };\n\n    const onRightClickNode = function(event: any, nodeId: any) {\n      Streamlit.setComponentValue({\"action\": \"onRightClickNode\", \"node\": nodeId});\n    };\n\n    const onMouseOverNode = function(nodeId: any) {\n    };\n\n    const onMouseOutNode = function(nodeId: any) {\n    };\n\n    const onClickLink = function(source: any, target: any) {\n        Streamlit.setComponentValue({\"action\": \"onClickLink\", \"sourceNode\": source, \"targetNode\":target});\n    };\n\n    const onRightClickLink = function(event: any, source: any, target: any) {\n      Streamlit.setComponentValue({\"action\": \"onRightClickLink\", \"sourceNode\": source, \"targetNode\":target});\n    };\n\n    const onMouseOverLink = function(source: any, target: any) {\n    };\n\n    const onMouseOutLink = function(source: any, target: any) {\n    };\n\n    const onNodePositionChange = function(nodeId: any, x: any, y: any) {\n      Streamlit.setComponentValue({\"action\": \"onNodePositionChange\", \"node\":nodeId , \"x\": x, \"y\":y});\n    };\n\n    return (\n      <Graph\n        id=\"graph-id\"\n        data={data}\n        config={config}\n        onClickNode={onClickNode}\n        onDoubleClickNode={onDoubleClickNode}\n        onRightClickNode={onRightClickNode}\n        onClickLink={onClickLink}\n        onRightClickLink={onRightClickLink}\n      />\n    )\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(AgraphComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport AgraphComponent from \"./AgraphComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <AgraphComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}